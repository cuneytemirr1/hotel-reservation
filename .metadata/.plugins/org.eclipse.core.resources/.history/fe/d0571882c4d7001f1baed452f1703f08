package cuneytemirr.hotel.rezervation.view;

import java.util.InputMismatchException;

import cuneytemirr.hotel.rezervation.controller.RoomController;
import cuneytemirr.hotel.rezervation.model.entity.Room;
import cuneytemirr.hotel.rezervation.utils.ProcessUtils;

public class RoomView {
	
	private ProcessUtils processUtils = ProcessUtils.getProcessUtilsInstance();
	private RoomController roomController = RoomController.getRoomControllerInstance();
	
	// Singleton
	private static RoomView roomView;
	private RoomView() {
	}
	public static RoomView getRoomViewInstance( ) {
		if (roomView == null) {
			roomView = new RoomView();
		}
		return roomView;
	}
	
	public void showAdmin() {
		System.out.println("Welcome to Room Operations!");
		
		ROOMOPERATION:
		do {
			System.out.print("1- Add Room\n"
					+ "2- Get All Rooms\n"
					+ "3- Uptade Room\n"
					+ "4- Delete Room\n"
					+ "5- Find Room\n"
					+ "0- Back to Main Operations\n"
					+ "Select Operation: ");
			String choice = processUtils.sc.nextLine();
			
			switch(choice) {
			case "1":
				add();
				break;
			case "2":
				getAll();
				break;
			case "3":
				uptadeByRoomNumber();
				break;
			case "4":
				deleteByRoomNumber();
				break;
			case "5":
				findByRoomNumber();
				break;
			case "0":
				break ROOMOPERATION;
			default:
				System.out.println("Invalid Operation!");
			}
			
		}while(true);
		
	}
	
	public void showReceptionist() {
		System.out.println("Method henüz hazır değil");
	}
	
	private void add() {
		System.out.print("Enter Room Number: ");
		String roomNumber = processUtils.sc.nextLine();
		System.out.print("Enter Room Category: ");
		String category = processUtils.sc.nextLine();
		System.out.print("Enter Room Capacity: ");
		int capacity;
		do {
			try {
				capacity = processUtils.sc.nextInt();
				processUtils.sc.nextLine();
				break;
			}catch (InputMismatchException e){
				System.out.print("Invalid Capacity! Please Enter Correct Capacity: ");
				processUtils.sc.nextLine();
			}
			
		}while(true);
		System.out.print("Enter Room Price: ");
		double price;
		
		do {
			try {
				price = processUtils.sc.nextDouble();
				processUtils.sc.nextLine();
				break;
			}catch (InputMismatchException e){
				System.out.print("Invalid Price! Please Enter Correct Price: ");
				processUtils.sc.nextLine();
			}
			
		}while(true);
		
		roomController.add(roomNumber, category, capacity, price);
		
		System.out.printf("%s Room is Successfully Added!%n", roomNumber);
	}
	private void getAll() {
		
		System.out.println("All Rooms\n"
				+ "----------");
		roomController.getAll();
		
	}
	private void uptadeByRoomNumber() {
		System.out.print("Enter Room Number: ");
		String roomNumber = processUtils.sc.nextLine();
		Room room = roomController.findRoomByRoomNumber(roomNumber);
		VALIDROOM:
		do {
			if (room != null) {
				break VALIDROOM;
			}
			System.out.print("Room Not Found! Please Enter Exist Room ( X For Back): ");
			roomNumber = processUtils.sc.nextLine();
			if (roomNumber.toUpperCase().equals("X")) {
				break VALIDROOM;
			}
			room = roomController.findRoomByRoomNumber(roomNumber);
		}while(true);
		
		System.out.print("1- Uptade Room Number\n"
				+ "2- Uptade Room Category\n"
				+ "3- Uptade Room Capacity\n"
				+ "4- Uptade Room Price\n"
				+ "5- Uptade Reserve\n"
				+ "0- Back\n"
				+ "Select Operation: ");
		String operation = processUtils.sc.nextLine();
		
		OPERATION:
		do {
			switch(operation) {
			case "1":
				System.out.print("Enter Room Number: ");
				String newRoomNumber = processUtils.sc.nextLine();
				roomController.uptadeRoomNumber(room, newRoomNumber);
				break OPERATION;
			case "2":
				break OPERATION;
			case "3":
				break OPERATION;
			case "4":
				break OPERATION;
			case "5":
				break OPERATION;
			case "0":
				break OPERATION;
			default:
				System.out.print("Invalid Operation! Please Select Valid Operation: ");
				operation = processUtils.sc.nextLine();
			}
		} while (true);
		
	}
	private void deleteByRoomNumber() {
		// TODO Auto-generated method stub
		
	}
	private void findByRoomNumber() {
		// TODO Auto-generated method stub
		
	}
	


}
